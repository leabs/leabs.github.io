<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-03-21T10:31:40-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Steven Leabo</title><subtitle>Front-end web developer living in Upstate New York. I specialize in css framworks and static site generators.</subtitle><author><name>Steven Leabo</name></author><entry><title type="html">What I want to do in the new year</title><link href="http://localhost:4000/self%20improvement/2020/01/12/new-years-resolutions.html" rel="alternate" type="text/html" title="What I want to do in the new year" /><published>2020-01-12T05:20:00-05:00</published><updated>2020-01-12T05:20:00-05:00</updated><id>http://localhost:4000/self%20improvement/2020/01/12/new-years-resolutions</id><content type="html" xml:base="http://localhost:4000/self%20improvement/2020/01/12/new-years-resolutions.html">&lt;p&gt;I am very much the type of person to participate in new years resolutions. It is a good time to reflect on what I have done in the last year and also a good time to set goals for the coming year.&lt;/p&gt;

&lt;p&gt;I want to build more things. I want to stop worrying about if my work flow is the most efficient and just focus on making stuff.&lt;/p&gt;

&lt;p&gt;I have spent hours obsessing over what back up solution is best to save my work: Time machine vs rsync vs backblaze. Then I realized two things: I have never had to restore files and even if I did I have not really created anything worth backing up (that lives outside github), so why am I wasting my time?&lt;/p&gt;

&lt;p&gt;I don’t want to think about making a blog, or comparing jekyll vs gatsby vs wordpress. I’m just typing out a post. I want to make a magic mirror, a new desk, build something with my hands out of pieces of wood or IoT dev kits or whatever. 2020 is the year I make more stuff.&lt;/p&gt;</content><author><name>Steven Leabo</name></author><category term="self improvement" /><summary type="html">I am very much the type of person to participate in new years resolutions. It is a good time to reflect on what I have done in the last year and also a good time to set goals for the coming year.</summary></entry><entry><title type="html">My front-end web development set up for 2020</title><link href="http://localhost:4000/web%20development/2020/01/04/my-2020-setup.html" rel="alternate" type="text/html" title="My front-end web development set up for 2020" /><published>2020-01-04T05:20:00-05:00</published><updated>2020-01-04T05:20:00-05:00</updated><id>http://localhost:4000/web%20development/2020/01/04/my-2020-setup</id><content type="html" xml:base="http://localhost:4000/web%20development/2020/01/04/my-2020-setup.html">&lt;p&gt;I have been doing front-end work as a full-time job for over 3 years. I started with an internship type job at a large space and defense company to redo their company website. Since then a segment of that company split off and I have been the main front-end person ever since (over 2 years).&lt;/p&gt;

&lt;p&gt;My daily tasks can include adding custom sections or content to our company website (which is a custom Wordpress theme that I built from scratch), adding content to our documentation website (which uses Jekyll which was also built from the ground up), to various marketing tasks and analytics tasks. I also help out with building front-end widgets and templates for our software (an internet of things app and web-app) which is built on custom css and handlebars templates.&lt;/p&gt;

&lt;p&gt;I’m leaving a few items off the list that are no brainers. Adobe apps for front-end is a no brainer, you’re going to be using the CC apps. Same goes for stuff like Homebrew and Node. These go without saying and are in some ways prerequisites to getting a development environment going.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;IDE (&lt;a href=&quot;https://www.sublimetext.com/&quot; target=&quot;_blank&quot;&gt;Sublime Text&lt;/a&gt;) - For IDE I find myself using Sublime text whenever I can. It’s lightweight and fast. There are packages but they aren’t as deep as some found on VSCode or Jetbrains software, but I don’t need those things all the time. For most of what I do (adding a new header file for wordpress, new layout in jekyll, new template in handlebars) Sublime is fine. If I am working on something more complex like a Node app we use to track our software’s metrics I will use VSCode to make sure linting is golden and I don’t break anything (and nothing fails CircleCI).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;OS (macOS) - I never used macOS before I went to school for web development. There I learned to make directories, ssh into servers, copy things over, etc. While this translates well to linux it does not translate to windows, so Windows development for me is still not super smooth (even with linux kernel support things always seem to go wrong). The majority of the reason I develop on mac is because that is how I learned, which leads me to my next item…&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Git client (&lt;a href=&quot;https://desktop.github.com/&quot; target=&quot;_blank&quot;&gt;GitHub Desktop&lt;/a&gt;) - Git with a GUI. I have always done it this way. Even thought I can do basic commands in the terminal I always feel like the GUI is so much more intuitive because that is how I started to use git at my first internship. I was using git to store my projects before that gig but it was just bulk pulls to master since I wasn’t working on a team and was yet to understand the importance of breaking issues up into their own branch. Git Tower is a great alternative that I used for awhile but it’s expensive at $70 a year.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Project Management (&lt;a href=&quot;https://www.atlassian.com/software/jira&quot; target=&quot;_blank&quot;&gt;Jira&lt;/a&gt; and &lt;a href=&quot;https://asana.com/&quot; target=&quot;_blank&quot;&gt;Asana&lt;/a&gt;) - For task tracking we use Jira for the engineering / software side and Asana for marketing tasks. There are reasons we break them up but what it boils down to is sprints and stories make sense for engineering, and simple task lists in groups make sense for marketing and communications.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Terminal (&lt;a href=&quot;https://iterm2.com/&quot; target=&quot;_blank&quot;&gt;iTerm 2&lt;/a&gt;) - There are plenty of reasons to use iTerm 2 over the default mac terminal or even one in VSCode. It boils down to customization. Not just how the terminal looks but how it works. It’s free and it’s great, you have nothing to lose. Once you use it you won’t go back.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Password manager (&lt;a href=&quot;https://1password.com/&quot; target=&quot;_blank&quot;&gt;1Password&lt;/a&gt; and &lt;a href=&quot;https://www.lastpass.com/&quot; target=&quot;_blank&quot;&gt;LastPass&lt;/a&gt;) - I have a personal 1Password account and my work uses LastPass. They both do the job and can sync passwords on your pc and mobile phone.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;File Transfer (&lt;a href=&quot;https://www.panic.com/transmit/&quot; target=&quot;_blank&quot;&gt;Transmit 5&lt;/a&gt;) - This is the best file sync software I have used and is well worth the one time license fee. It can connect to remote servers, or cloud storage services like Box and DropBox, or local storage on your network. You can set file rules, transfer rules, and general customization.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Local Development Environment (&lt;a href=&quot;https://www.mamp.info/en/&quot; target=&quot;_blank&quot;&gt;MAMP&lt;/a&gt;) - MAMP works for what I do with Wordpress. Building custom Wordpress themes is not possible without building locally, and the free version does everything I need. I have started playing around with Docker but would still use MAMP right now as I know it better than Docker currently.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;API Client (&lt;a href=&quot;https://www.getpostman.com/&quot; target=&quot;_blank&quot;&gt;Postman&lt;/a&gt;) - While this isn’t something I use everyday it does make GET and POST requests a breeze in APIs. When I use this I am getting requests from out custom node app which uses a replica of our DB for metric queries. In other words this lets you see what data you get from the API locally.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Secure Tunnel (&lt;a href=&quot;https://ngrok.com/&quot; target=&quot;_blank&quot;&gt;ngrok&lt;/a&gt;) - Sometimes I need to build something locally and share it with a co-worker for feed back. Ngrok is a tool that takes a local port on your machine and makes a public tunnel to it so people outside your network can view the content. This is extremely helpful for those working remotely like I often do.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some software that is smaller but I still use often: Alfred 3 (fast search and automation), CopyClip (clipboard history), Oh My Zsh (zsh config, makes life in iTerm 2 even easier),Robo 3T (Mongo DB GUI), SnippetsLab (Snippet library and copy/paste).&lt;/p&gt;</content><author><name>Steven Leabo</name></author><category term="Web Development" /><summary type="html">I have been doing front-end work as a full-time job for over 3 years. I started with an internship type job at a large space and defense company to redo their company website. Since then a segment of that company split off and I have been the main front-end person ever since (over 2 years).</summary></entry></feed>